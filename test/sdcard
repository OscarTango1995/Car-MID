#include <SPI.h>
#include <SD.h>

#define SD_CS 15  // Chip select pin for the SD card module

void testSDCard() {
  // Open or create a file on the SD card
  File file = SD.open("/test.txt", FILE_WRITE);
  if (file) {
    file.println("Hello from ESP32!");
    file.close();
    Serial.println("File written successfully.");
  } else {
    Serial.println("Failed to open file for writing.");
  }

  // Read the file back
  file = SD.open("/test.txt");
  if (file) {
    Serial.println("Reading from file:");
    while (file.available()) {
      Serial.write(file.read());
    }
    file.close();
  } else {
    Serial.println("Failed to open file for reading.");
  }
}

void setup() {
  Serial.begin(9600);
  delay(10000);

  // Initialize the SD card
  if (!SD.begin(SD_CS, SPI, 4000000)) {  // 4 MHz instead of default 40 MHz
  Serial.println("Card Mount Failed");
  return;
}

  

  uint8_t cardType = SD.cardType();

  if (cardType == CARD_NONE) {
    Serial.println("No SD card attached");
    return;
  }

  Serial.print("SD Card Type: ");
  if (cardType == CARD_MMC) {
    Serial.println("MMC");
  } else if (cardType == CARD_SD) {
    Serial.println("SDSC");
  } else if (cardType == CARD_SDHC) {
    Serial.println("SDHC");
  } else {
    Serial.println("UNKNOWN");
  }

  // Print the size of the SD card
  uint64_t cardSize = SD.cardSize() / (1024 * 1024);
  Serial.printf("SD Card Size: %lluMB\n", cardSize);

  // Test writing and reading a file
  testSDCard();
}



void loop() {
  // Nothing in loop
}
