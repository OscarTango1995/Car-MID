#include "BluetoothSerial.h"
#include "ELMduino.h"


BluetoothSerial SerialBT;
#define ELM_PORT   SerialBT
#define DEBUG_PORT Serial


ELM327 myELM327;


uint32_t rpm = 0;


void setup()
{
#if LED_BUILTIN
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);
#endif
    Serial.begin(9600);
    delay(750);
  DEBUG_PORT.begin(9600);
  delay(750);
   // Start Bluetooth and set PIN
    if (!SerialBT.begin("ArduHUD", true)) {  // Start Bluetooth in master mode
        DEBUG_PORT.println("Failed to initialize Bluetooth");
        while (1);  // Hang if Bluetooth fails to initialize
    }
  SerialBT.setPin("1234");
//   ELM_PORT.begin("ArduHUD", true);
  
  if (!ELM_PORT.connect("OBDII"))
  {
    DEBUG_PORT.println("Couldn't connect to OBD scanner - Phase 1");
    while(1);
  }

  if (!myELM327.begin(ELM_PORT, true, 2000))
  {
    Serial.println("Couldn't connect to OBD scanner - Phase 2");
    while (1);
  }

  Serial.println("Connected to ELM327");
}


void loop()
{
  float tempRPM = myELM327.rpm();

  if (myELM327.nb_rx_state == ELM_SUCCESS)
  {
    rpm = (uint32_t)tempRPM;
    Serial.print("RPM: "); Serial.println(rpm);
  }

   float coolant = myELM327.engineCoolantTemp();

  if (myELM327.nb_rx_state == ELM_SUCCESS)
  {
    rpm = (uint32_t)coolant;
    Serial.print("coolant: "); Serial.println(coolant);
  }
  else if (myELM327.nb_rx_state != ELM_GETTING_MSG){
    myELM327.printError();
    }
    delay(1000);
}
